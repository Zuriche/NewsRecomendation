{"version":3,"sources":["App/logo.png","Auth/Auth.js","Base/Base.js","Login/LoginForm.js","Login/LoginPage.js","SignUp/SignUpForm.js","SignUp/SignUpPage.js","NewsCard/NewsCard.js","NewsPanel/NewsPanel.js","App/App.js","routes.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Auth","token","email","localStorage","setItem","getItem","removeItem","Base","_ref","children","react_default","a","createElement","className","href","id","isUserAuthenticated","getEmail","es","to","LoginForm","onSubmit","onChange","errors","action","summary","type","name","htmlFor","password","value","LoginPage","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user","event","_this2","preventDefault","console","log","url","window","location","hostname","request","Request","method","headers","Accept","Content-Type","body","JSON","stringify","fetch","then","response","status","setState","json","authenticateUser","router","replace","message","field","target","_this3","src_Login_LoginForm","e","processForm","changeUser","React","Component","contextTypes","PropTypes","object","isRequired","SignUpForm","SignUpPage","confirm_password","src_SignUp_SignUpForm","NewsCard","open","onClick","redirectToUrl","news","src","urlToImage","alt","title","description","source","reason","time","NewsPanel","pageNum","loadedAll","loadMoreNews","_","debounce","addEventListener","handleScroll","scrollY","pageYOffset","document","documentElement","scrollTop","innerHeight","offsetHeight","news_list","map","key","digest","src_NewsCard_NewsCard","news_url","encodeURI","Authorization","getToken","res","new_news","length","concat","renderNews","App","logo","src_NewsPanel_NewsPanel","routes","component","childRoutes","path","getComponent","callback","onEnter","nextState","deauthenticateUser","Boolean","match","ReactDOM","render","history","browserHistory","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8RCyBzBC,gHAxBaC,EAAOC,GAC3BC,aAAaC,QAAQ,QAASH,GAC9BE,aAAaC,QAAQ,QAASF,iDAI9B,OAAyC,OAAlCC,aAAaE,QAAQ,sDAI5BF,aAAaG,WAAW,SACxBH,aAAaG,WAAW,4CAIxB,OAAOH,aAAaE,QAAQ,4CAI5B,OAAOF,aAAaE,QAAQ,kBCgBrBE,SA7BF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACTC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,cAAtB,YACAH,EAAAC,EAAAC,cAAA,MAAIG,GAAG,aAAaF,UAAU,SACzBb,EAAKgB,sBACDN,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,UAAKZ,EAAKiB,YACVP,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,WAAT,aAKPT,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,UAAT,WACJT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,WAAT,gBAQxBT,EAAAC,EAAAC,cAAA,WACCH,0CCUMW,SApCG,SAAAZ,GAAA,IACda,EADcb,EACda,SACAC,EAFcd,EAEdc,SACAC,EAHcf,EAGde,OAHc,OAKdb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAUW,OAAO,IAAIH,SAAUA,GAC3CX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,SACCU,EAAOE,SAAWf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBU,EAAOE,UAC7Ef,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWE,GAAG,QAAQW,KAAK,QAAQC,KAAK,QAAQL,SAAUA,IAC3EZ,EAAAC,EAAAC,cAAA,SAAOgB,QAAQ,SAAf,WAGPL,EAAOrB,OAASQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBU,EAAOrB,QAC3EQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWE,GAAG,WAAWW,KAAK,WAAWC,KAAK,WAAWL,SAAUA,IACpFZ,EAAAC,EAAAC,cAAA,SAAOgB,QAAQ,YAAf,cAGPL,EAAOM,UAAYnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBU,EAAOM,WAC9EnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,SAAOc,KAAK,SAASb,UAAU,gDAAgDiB,MAAM,YAErFpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,sBAA8CH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,WAAT,kBC5B5DY,cACF,SAAAA,EAAYC,EAAOC,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACxBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAML,EAAOC,KACRQ,MAAQ,CACTlB,OAAQ,GAKRmB,KAAM,CACFxC,MAAO,GACP2B,SAAU,KAVMK,2EAehBS,GAAO,IAAAC,EAAAP,KACfM,EAAME,iBACN,IAAM3C,EAAQmC,KAAKI,MAAMC,KAAKxC,MACxB2B,EAAWQ,KAAKI,MAAMC,KAAKb,SAEjCiB,QAAQC,IAAI,QAAS7C,GACrB4C,QAAQC,IAAI,WAAYlB,GAExB,IAAMmB,EAAM,UAAYC,OAAOC,SAASC,SAAW,mBAC7CC,EAAU,IAAIC,QAChBL,EACA,CACIM,OAAO,OAAQC,QAAS,CACxBC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB1D,MAAOmC,KAAKI,MAAMC,KAAKxC,MACvB2B,SAAUQ,KAAKI,MAAMC,KAAKb,aAKlCgC,MAAMT,GAASU,KAAK,SAAAC,GACQ,MAApBA,EAASC,QACTpB,EAAKqB,SAAS,CACV1C,OAAQ,KAGZwC,EAASG,OAAOJ,KAAK,SAAAI,GACjBpB,QAAQC,IAAImB,GACZlE,EAAKmE,iBAAiBD,EAAKjE,MAAOC,GAClC0C,EAAKX,QAAQmC,OAAOC,QAAQ,SAGhCvB,QAAQC,IAAI,gBACZgB,EAASG,OAAOJ,KAAK,SAAAI,GACjB,IAAM3C,EAAS2C,EAAK3C,OAAS2C,EAAK3C,OAAS,GAC3CA,EAAOE,QAAUyC,EAAKI,QACtB1B,EAAKqB,SAAS,CAAC1C,mDAMpBoB,GACP,IAAM4B,EAAQ5B,EAAM6B,OAAO7C,KACrBe,EAAOL,KAAKI,MAAMC,KACxBA,EAAK6B,GAAS5B,EAAM6B,OAAO1C,MAE3BO,KAAK4B,SAAS,CAACvB,0CAMV,IAAA+B,EAAApC,KACL,OACI3B,EAAAC,EAAAC,cAAC8D,EAAD,CACIrD,SAAU,SAACsD,GAAD,OAAOF,EAAKG,YAAYD,IAClCrD,SAAU,SAACqD,GAAD,OAAOF,EAAKI,WAAWF,IACjCpD,OAAQc,KAAKI,MAAMlB,gBA7EXuD,IAAMC,WAqF9BhD,EAAUiD,aAAe,CACvBZ,OAAQa,IAAUC,OAAOC,YAGZpD,QC/CAqD,SA1CI,SAAA5E,GAAA,IACfa,EADeb,EACfa,SACAC,EAFed,EAEfc,SACAC,EAHef,EAGfe,OAHe,OAKfb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAUW,OAAO,IAAIH,SAAUA,GAC3CX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,UACCU,EAAOE,SAAWf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBU,EAAOE,UAC7Ef,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWE,GAAG,QAAQW,KAAK,QAAQC,KAAK,QAAQL,SAAUA,IAC3EZ,EAAAC,EAAAC,cAAA,SAAOgB,QAAQ,SAAf,WAGPL,EAAOrB,OAASQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBU,EAAOrB,QAC3EQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWE,GAAG,WAAWW,KAAK,WAAWC,KAAK,WAAWL,SAAUA,IACpFZ,EAAAC,EAAAC,cAAA,SAAOgB,QAAQ,YAAf,cAGPL,EAAOM,UAAYnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBU,EAAOM,WAC9EnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOG,GAAG,mBAAmBW,KAAK,WAAWC,KAAK,mBAAmBd,UAAU,WAAWS,SAAUA,IACpGZ,EAAAC,EAAAC,cAAA,SAAOgB,QAAQ,oBAAf,sBAGRlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,SAAOc,KAAK,SAASb,UAAU,gDAAgDiB,MAAM,aAErFpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,8BAAsDH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,UAAT,gBCnCpEkE,cACF,SAAAA,EAAYrD,EAAOC,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,IACxBnD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkD,GAAA7C,KAAAH,KAAML,EAAOC,KACRQ,MAAQ,CACTlB,OAAQ,GAGRmB,KAAM,CACFxC,MAAO,GACP2B,SAAU,GACVyD,iBAAkB,KATFpD,2EAchBS,GAAO,IAAAC,EAAAP,KACfM,EAAME,iBACN,IAAM3C,EAAQmC,KAAKI,MAAMC,KAAKxC,MACxB2B,EAAWQ,KAAKI,MAAMC,KAAKb,SAC3ByD,EAAmBjD,KAAKI,MAAMC,KAAK4C,iBAEzCxC,QAAQC,IAAI,QAAS7C,GACrB4C,QAAQC,IAAI,WAAYlB,GACxBiB,QAAQC,IAAI,mBAAoBuC,GAIhC,IAAMtC,EAAM,UAAYC,OAAOC,SAASC,SAAW,oBAC7CC,EAAU,IAAIC,QAChBL,EACA,CACIM,OAAO,OAAQC,QAAS,CACxBC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB1D,MAAOmC,KAAKI,MAAMC,KAAKxC,MACvB2B,SAAUQ,KAAKI,MAAMC,KAAKb,aAKlCgC,MAAMT,GAASU,KAAK,SAAAC,GACQ,MAApBA,EAASC,QACTpB,EAAKqB,SAAS,CACV1C,OAAQ,KAIZqB,EAAKX,QAAQmC,OAAOC,QAAQ,WAG5BN,EAASG,OAAOJ,KAAK,SAAAI,GACjB,IAAM3C,EAAS2C,EAAK3C,OAAS2C,EAAK3C,OAAS,GAC3CA,EAAOE,QAAUyC,EAAKI,QACtBxB,QAAQC,IAAIH,EAAKH,MAAMlB,QACvBqB,EAAKqB,SAAS,CAAC1C,kDAQpBoB,GACP,IAAM4B,EAAQ5B,EAAM6B,OAAO7C,KACrBe,EAAOL,KAAKI,MAAMC,KACxBA,EAAK6B,GAAS5B,EAAM6B,OAAO1C,MAE3BO,KAAK4B,SAAS,CAACvB,SAEf,IAAMnB,EAASc,KAAKI,MAAMlB,OACvBc,KAAKI,MAAMC,KAAKb,WAAaQ,KAAKI,MAAMC,KAAK4C,iBAC5C/D,EAAOM,SAAW,4CAElBN,EAAOM,SAAW,GAEtBQ,KAAK4B,SAAS,CAAC1C,4CAMV,IAAAkD,EAAApC,KACL,OACI3B,EAAAC,EAAAC,cAAC2E,EAAD,CACIlE,SAAU,SAACsD,GAAD,OAAOF,EAAKG,YAAYD,IAClCrD,SAAU,SAACqD,GAAD,OAAOF,EAAKI,WAAWF,IACjCpD,OAAQc,KAAKI,MAAMlB,gBAxFVuD,IAAMC,WAgG/BM,EAAWL,aAAe,CACxBZ,OAAQa,IAAUC,OAAOC,YAGZE,QClEAG,qMAnCGxC,EAAK2B,GACfA,EAAE9B,iBACFI,OAAOwC,KAAKzC,EAAK,2CAGZ,IAAAd,EAAAG,KACL,OACI3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB6E,QAAS,SAACf,GAAD,OAAOzC,EAAKyD,cAAczD,EAAKF,MAAM4D,KAAK5C,IAAK2B,KACpFjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKiF,IAAKxD,KAAKL,MAAM4D,KAAKE,WAAYC,IAAI,UAE9CrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAKyB,KAAKL,MAAM4D,KAAKI,OACrBtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAIyB,KAAKL,MAAM4D,KAAKK,aACpBvF,EAAAC,EAAAC,cAAA,WAC+B,MAA1ByB,KAAKL,MAAM4D,KAAKM,QAAkBxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAA6BwB,KAAKL,MAAM4D,KAAKM,QACpE,MAA1B7D,KAAKL,MAAM4D,KAAKO,QAAkBzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAA8BwB,KAAKL,MAAM4D,KAAKO,QACvE,MAAxB9D,KAAKL,MAAM4D,KAAKQ,MAAgB1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAwBwB,KAAKL,MAAM4D,KAAKQ,oBAtBzGtB,IAAMC,6BCuFdsB,cAlFX,SAAAA,IAAc,IAAAnE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,IACVnE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkE,GAAA7D,KAAAH,QACKI,MAAQ,CAAEmD,KAAM,KAAMU,QAAQ,EAAGC,WAAU,GAFtCrE,mFAIM,IAAAU,EAAAP,KAChBA,KAAKmE,aAAa,qBAClBnE,KAAKmE,aAAeC,IAAEC,SAASrE,KAAKmE,aAAc,KAClDvD,OAAO0D,iBAAiB,SAAU,kBAAM/D,EAAKgE,wDAI7C,IAAIC,EAAU5D,OAAO4D,SAAW5D,OAAO6D,aAAeC,SAASC,gBAAgBC,UAC3EhE,OAAOiE,YAAcL,GAAaE,SAASrD,KAAKyD,aAAe,KAC/DrE,QAAQC,IAAI,kBACZV,KAAKmE,aAAa,sDAItB,IAAMY,EAAY/E,KAAKI,MAAMmD,KAAKyB,IAAI,SAACzB,GACnC,OACIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkByG,IAAK1B,EAAK2B,QACvC7G,EAAAC,EAAAC,cAAC4G,EAAD,CAAU5B,KAAMA,OAK5B,OACIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,WACKwG,2CAMF,IAAA3C,EAAApC,KACXS,QAAQC,IAAI,YAAcV,KAAKI,MAAM8D,WAIjClE,KAAKI,MAAM8D,WAAazD,QAAQC,IAAI,sBACxC,IAAM0E,EAAW,UAAYxE,OAAOC,SAASC,SAAW,qBACtCnD,EAAKiB,WAAa,YAAcoB,KAAKI,MAAM6D,QACvDlD,EAAU,IAAIC,QAChBqE,UAAUD,GAAW,CACrBnE,OAAQ,MACRC,QAAS,CACLoE,cAAiB,UAAY3H,EAAK4H,cAG1C/D,MAAMT,GACDU,KAAK,SAAA+D,GAAG,OAAIA,EAAI3D,SAChBJ,KAAK,SAAAgE,GACEA,GAAgC,IAApBA,EAASC,QACrBtD,EAAKR,SAAS,CAACsC,WAAU,IAE7B9B,EAAKR,SAAS,CACV2B,KAAMnB,EAAKhC,MAAMmD,KAAOnB,EAAKhC,MAAMmD,KAAKoC,OAAOF,GAAYA,EAC3DxB,QAAS7B,EAAKhC,MAAM6D,QAAU,uCAM1C,OAAGjE,KAAKI,MAAMmD,KAENlF,EAAAC,EAAAC,cAAA,WACKyB,KAAK4F,cAMVvH,EAAAC,EAAAC,cAAA,gCA1EQkE,IAAMC,4BCafmD,mLAZP,OACIxH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOgF,IAAKsC,IAAMpC,IAAI,SACrCrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACwH,EAAD,eANFtD,IAAMC,WCuCTsD,EAtCA,CACXC,UAAW/H,EACXgI,YAAa,CACT,CACIC,KAAM,IACNC,aAAc,SAACvF,EAAUwF,GAClB1I,EAAKgB,sBACJ0H,EAAS,KAAMR,GAEfQ,EAAS,KAAM3G,KAK3B,CACIyG,KAAM,SACNF,UAAWvG,GAGf,CACIyG,KAAM,UACNF,UAAWjD,GAGf,CACImD,KAAM,UACNG,QAAS,SAACC,EAAWvE,GACjBrE,EAAK6I,qBACLxE,EAAQ,SCvBJyE,QACW,cAA7B7F,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS4F,MACvB,2DCZNC,IAASC,OACLvI,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQgI,QAASC,IAAgBd,OAAQA,IACzCtB,SAASqC,eAAe,SDyHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzF,KAAK,SAAA0F,GACjCA,EAAaC","file":"static/js/main.1d4c467b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f9ebcc13.png\";","class Auth {\n    static authenticateUser(token, email) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('email', email);\n    }\n\n    static isUserAuthenticated() {\n        return localStorage.getItem('token') !== null;\n    }\n\n    static deauthenticateUser() {\n        localStorage.removeItem('token');\n        localStorage.removeItem('email');\n    }\n\n    static getToken() {\n        return localStorage.getItem('token');\n    }\n\n    static getEmail() {\n        return localStorage.getItem('email');\n    }\n}\n\n\nexport default Auth;\n","import 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.js';\nimport React from 'react';\nimport { Link } from 'react-router';\nimport Auth from '../Auth/Auth';\nimport './Base.css';\n\nconst Base = ({ children }) => (\n    <div>\n        <nav className=\"nav-bar indigo lighten-1\">\n            <div className=\"nav-wrapper\">\n                <a href=\"/\" className=\"brand-logo\">Tap News</a>\n                <ul id=\"nav-mobile\" className=\"right\">\n                    {Auth.isUserAuthenticated()?\n                        (<div>\n                            <li>{Auth.getEmail()}</li>\n                            <li><Link to=\"/logout\">Log out</Link></li>\n                         </div>\n\n                        )\n                        :\n                        (<div>\n                            <li><Link to=\"/login\">Log in</Link></li>\n                            <li><Link to=\"/signup\">Sign up</Link></li>\n                         </div>\n\n                        )\n                    }\n                </ul>\n            </div>\n        </nav>\n        <br/>\n        {children}\n    </div>\n);\n\nexport default Base;\n","import './LoginForm.css';\nimport React from 'react';\nimport { Link } from 'react-router';\n\n\n\nconst LoginForm = ({\n    onSubmit,\n    onChange,\n    errors,\n}) => (\n    <div className=\"container\">\n        <div className=\"card-panel login-panel\">\n            <form className=\"col s12\" action=\"/\" onSubmit={onSubmit}>\n                <h4 className=\"center-align\">Login</h4>\n                {errors.summary && <div className=\"row\"><p className=\"error-message\">{errors.summary}</p></div>}\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input className=\"validate\" id=\"email\" type=\"email\" name=\"email\" onChange={onChange}/>\n                        <label htmlFor='email'>Email</label>\n                    </div>\n                </div>\n                {errors.email && <div className=\"row\"><p className=\"error-message\">{errors.email}</p></div>}\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input className=\"validate\" id=\"password\" type=\"password\" name=\"password\" onChange={onChange}/>\n                        <label htmlFor='password'>Password</label>\n                    </div>\n                </div>\n                {errors.password && <div className=\"row\"><p className=\"error-message\">{errors.password}</p></div>}\n                <div className=\"row right-align\">\n                <input type=\"submit\" className=\"waves-effect waves-light btn indigo lighten-1\" value='Log in'/>\n                </div>\n                <div className=\"row\">\n                    <p className=\"right-align\"> New to Tap News?  <Link to=\"/signup\">Sign Up</Link></p>\n                </div>\n            </form>\n        </div>\n    </div>\n\n);\n\nexport default LoginForm;\n","import Auth from '../Auth/Auth';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LoginForm from './LoginForm';\n\n\nclass LoginPage extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            errors: {\n                // summary: 'Summary Error!',\n                // email: 'Email Error!',\n                // password: 'Password Error!'\n            },\n            user: {\n                email: '',\n                password: ''\n            }\n        };\n    }\n\n    processForm(event) {\n        event.preventDefault();\n        const email = this.state.user.email;\n        const password = this.state.user.password;\n\n        console.log('email', email);\n        console.log('password', password);\n        // post login data\n        const url = 'http://' + window.location.hostname + ':3000' + '/auth/login';\n        const request = new Request(\n            url,\n            {\n                method:'POST', headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: this.state.user.email,\n                password: this.state.user.password\n            })\n            }\n        );\n\n        fetch(request).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    errors: {}\n                });\n\n                response.json().then(json => {\n                    console.log(json);\n                    Auth.authenticateUser(json.token, email);\n                    this.context.router.replace('/');\n                });\n            } else {\n                console.log('Login failed');\n                response.json().then(json => {\n                    const errors = json.errors ? json.errors : {};\n                    errors.summary = json.message;\n                    this.setState({errors});\n                });\n            }\n        });\n    }\n\n    changeUser(event) {\n        const field = event.target.name; //email || Password\n        const user = this.state.user;\n        user[field] = event.target.value;\n\n        this.setState({user});\n    }\n\n\n\n\n    render() {\n        return (\n            <LoginForm\n                onSubmit={(e) => this.processForm(e)}\n                onChange={(e) => this.changeUser(e)}\n                errors={this.state.errors}\n            />\n\n        );\n    }\n}\n\n// To make react-router work\nLoginPage.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default LoginPage;\n","import './SignUpForm.css';\nimport React from 'react';\nimport { Link } from 'react-router';\n\n\n\nconst SignUpForm = ({\n    onSubmit,\n    onChange,\n    errors,\n}) => (\n    <div className=\"container\">\n        <div className=\"card-panel signup-panel\">\n            <form className=\"col s12\" action=\"/\" onSubmit={onSubmit}>\n                <h4 className=\"center-align\">SignUp</h4>\n                {errors.summary && <div className=\"row\"><p className=\"error-message\">{errors.summary}</p></div>}\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input className=\"validate\" id=\"email\" type=\"email\" name=\"email\" onChange={onChange}/>\n                        <label htmlFor='email'>Email</label>\n                    </div>\n                </div>\n                {errors.email && <div className=\"row\"><p className=\"error-message\">{errors.email}</p></div>}\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input className=\"validate\" id=\"password\" type=\"password\" name=\"password\" onChange={onChange}/>\n                        <label htmlFor='password'>Password</label>\n                    </div>\n                </div>\n                {errors.password && <div className=\"row\"><p className=\"error-message\">{errors.password}</p></div>}\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input id=\"confirm_password\" type=\"password\" name=\"confirm_password\" className=\"validate\" onChange={onChange}/>\n                        <label htmlFor=\"confirm_password\">Conform Password</label>\n                    </div>\n                </div>\n                <div className=\"row right-align\">\n                <input type=\"submit\" className=\"waves-effect waves-light btn indigo lighten-1\" value='Sign Up'/>\n                </div>\n                <div className=\"row\">\n                    <p className=\"right-align\"> Already have an account?  <Link to=\"/login\">Login</Link></p>\n                </div>\n            </form>\n        </div>\n    </div>\n\n);\n\nexport default SignUpForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SignUpForm from './SignUpForm';\n\n\nclass SignUpPage extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            errors: {\n\n            },\n            user: {\n                email: '',\n                password: '',\n                confirm_password: ''\n            }\n        };\n    }\n\n    processForm(event) {\n        event.preventDefault();\n        const email = this.state.user.email;\n        const password = this.state.user.password;\n        const confirm_password = this.state.user.confirm_password;\n\n        console.log('email', email);\n        console.log('password', password);\n        console.log('confirm_password', confirm_password);\n\n\n        // post signup data\n        const url = 'http://' + window.location.hostname + ':3000' + '/auth/signup';\n        const request = new Request(\n            url,\n            {\n                method:'POST', headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: this.state.user.email,\n                password: this.state.user.password\n            })\n            }\n        );\n\n        fetch(request).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    errors: {}\n                });\n\n                // change the current URL to /login\n                this.context.router.replace('/login');\n\n            } else {\n                response.json().then(json => {\n                    const errors = json.errors ? json.errors : {};\n                    errors.summary = json.message;\n                    console.log(this.state.errors);\n                    this.setState({errors});\n                });\n            }\n        });\n\n\n    }\n\n    changeUser(event) {\n        const field = event.target.name; //email || Password || confirm_password\n        const user = this.state.user;\n        user[field] = event.target.value;\n\n        this.setState({user});\n\n        const errors = this.state.errors;\n        if(this.state.user.password !== this.state.user.confirm_password) {\n            errors.password = \"Password and Confirm Password don't match\";\n        } else {\n            errors.password = '';\n        }\n        this.setState({errors});\n    }\n\n\n\n\n    render() {\n        return (\n            <SignUpForm\n                onSubmit={(e) => this.processForm(e)}\n                onChange={(e) => this.changeUser(e)}\n                errors={this.state.errors}\n            />\n\n        );\n    }\n}\n\n// To make react-router work\nSignUpPage.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport './NewsCard.css'\n\nclass NewsCard extends React.Component {\n    redirectToUrl(url, e) {\n        e.preventDefault();\n        window.open(url, '_blank');\n\n    }\n    render() {\n        return (\n            <div className=\"news-container\" onClick={(e) => this.redirectToUrl(this.props.news.url, e)}>\n                <div className='row'>\n                    <div className='col s4 fill'>\n                        <img src={this.props.news.urlToImage} alt='news'/>\n                    </div>\n                    <div className=\"col s8\">\n                        <div className=\"news-intro-col\">\n                            <div className=\"news-intro-panel\">\n                                <h4>{this.props.news.title}</h4>\n                                <div className=\"news-description\">\n                                    <p>{this.props.news.description}</p>\n                                    <div>\n                                        {this.props.news.source != null && <div className='chip light-blue news-chip'>{this.props.news.source}</div>}\n                                        {this.props.news.reason != null && <div className='chip light-green news-chip'>{this.props.news.reason}</div>}\n                                        {this.props.news.time != null && <div className='chip amber news-chip'>{this.props.news.time}</div>}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nexport default NewsCard;\n","// import './NewsPanel.css';\nimport Auth from '../Auth/Auth';\nimport NewsCard from '../NewsCard/NewsCard';\nimport React from 'react';\nimport _ from 'lodash';\n\n\nclass NewsPanel extends React.Component {\n    constructor() {\n        super();\n        this.state = { news: null, pageNum:1, loadedAll:false };\n    }\n    componentDidMount() {\n        this.loadMoreNews(\"componentDidMount\");\n        this.loadMoreNews = _.debounce(this.loadMoreNews, 1000);\n        window.addEventListener('scroll', () => this.handleScroll());\n    }\n\n    handleScroll() {\n        let scrollY = window.scrollY || window.pageYOffset || document.documentElement.scrollTop;\n        if((window.innerHeight + scrollY) >= (document.body.offsetHeight - 50) ) {\n            console.log('Handle Scroll.');\n            this.loadMoreNews(\"handleScroll\");\n        }\n    }\n    renderNews() {\n        const news_list = this.state.news.map((news) => {\n            return (\n                <div className='list-group-item' key={news.digest} >\n                    <NewsCard news={news}/>\n                </div>\n            );\n        });\n\n        return (\n            <div className='container-fluid'>\n                <div>\n                    {news_list}\n                </div>\n            </div>\n        );\n    }\n\n    loadMoreNews() {\n        console.log(\"loadAll? \" + this.state.loadedAll)\n        // if(this.state.loadedAll === true) {\n        //     return;\n        // }\n        if(!this.state.loadedAll)   console.log('Loading more news!');\n        const news_url = 'http://' + window.location.hostname + ':3000' +\n        '/news/userId=' + Auth.getEmail() + \"&pageNum=\" + this.state.pageNum;\n        const request = new Request(\n            encodeURI(news_url), {\n            method: 'GET',\n            headers: {\n                'Authorization': 'bearer ' + Auth.getToken(),\n            }\n        } );\n        fetch(request)\n            .then(res => res.json())\n            .then(new_news => {\n                if(!new_news || new_news.length === 0) {\n                    this.setState({loadedAll:true});\n                }\n                this.setState({\n                    news: this.state.news ? this.state.news.concat(new_news) : new_news,\n                    pageNum: this.state.pageNum + 1,\n                });\n            });\n\n    }\n    render() {\n        if(this.state.news) {\n            return (\n                <div>\n                    {this.renderNews()}\n                </div>\n\n            );\n        } else {\n            return(\n                <div>\n                    Loading...\n                </div>\n            );\n        }\n\n    }\n}\n\nexport default NewsPanel;\n","import './App.css';\nimport NewsPanel from '../NewsPanel/NewsPanel'\n\nimport React from 'react';\nimport logo from './logo.png';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n                <img className='logo' src={logo} alt='logo'/>\n                <div className='container'>\n                    <NewsPanel />\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default App;\n","import Base from './Base/Base';\nimport LoginPage from './Login/LoginPage';\nimport SignUpPage from './SignUp/SignUpPage';\nimport Auth from './Auth/Auth';\nimport App from './App/App';\n\n\nconst routes = {\n    component: Base,\n    childRoutes: [\n        {\n            path: '/',\n            getComponent: (location, callback) => {\n                if(Auth.isUserAuthenticated()) {\n                    callback(null, App);\n                } else {\n                    callback(null, LoginPage);\n                }\n            }\n        },\n\n        {\n            path: '/login',\n            component: LoginPage\n        },\n\n        {\n            path: '/signup',\n            component: SignUpPage\n        },\n\n        {\n            path: '/logout',\n            onEnter: (nextState, replace) => {\n                Auth.deauthenticateUser();\n                replace('/');\n            }\n        },\n\n\n\n\n    ]\n};\n\nexport default routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { browserHistory, Router } from 'react-router';\nimport routes from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router history={browserHistory} routes={routes} />,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}